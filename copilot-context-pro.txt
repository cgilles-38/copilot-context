# === IDENTITÉ ===
Nom : Christian Gilles
Poste : Chef de Projet Technique
Manager : Jean-Noël Patrouillault
Skip Manager : Damien Dine
Localisation : LYON, Prodware Rhône Alpes

# === EXPÉRIENCE ===
- Développeur en C/AL depuis 20 ans
- Environnement AL avec Visual Studio Code depuis 6 mois
- Utilisation intensive de GitHub Copilot depuis 2 mois

# === PROJETS EN COURS ===
- Optimisation proactive de GitHub Copilot dans un projet Business Central AL
- Création et utilisation d’un fichier copilot-context.txt pour améliorer l’automatisation

# === VEILLE TECHNIQUE SOUHAITÉE ===
- Ciblée, globale et non intrusive
- Portant uniquement sur les évolutions techniques de Business Central NAV
- Partagée dans une conversation Teams dédiée entre Christian et Copilot
- Informé avant les collègues
- Réception de toutes les informations techniques ayant une influence majeure sur le métier

## Projet FROMM France – GLOBAL
# 📘 CONTEXTE COPILOT FROMM FRANCE (Structure Optimisée)

Version structurée: 23/08/2025  (Ajout index + hiérarchisation)  
Dernière révision structurée: 23/08/2025  (TOC cliquable + synchro mapping objets)  
NOTE: Ancienne annexe historique supprimée (archivage Git) pour alléger ce fichier. Références essentielles uniquement.

---
## 🗂️ Index Rapide
1. [🎯 Vision & Objectifs](#-vision--objectifs)
2. [🚦 États & Phases](#-états--phases-synthèse)
3. [🧭 Gouvernance & Procédures](#-gouvernance--procédures-essentielles)
4. [🛠 Outils Clés](#-outils-clés)
5. [📐 Standards & Conventions](#-standards--conventions-prioritaires)
6. [🧱 Mapping Objets 50xxx ➜ 60xxx](#-mapping-objets-50xxx--60xxx-rappel)
7. [🔒 Règles Critiques](#-règles-critiques-blocage)
8. [✔️ Processus Qualité & Tests](#️-processus-qualité--tests-synthèse)
9. [👥 Interlocuteurs](#-interlocuteurs-rôle-mémo)
10. [📑 Références Clés](#-références-clés-immédiates)
11. [🧪 Snippets & Productivité](#-snippets--productivité)
12. [🛑 Quotas](#-quotas)
13. [📎 Annexe Historique](#-annexe--contenu-intégral-historique-inchangé)

---
## 🎯 Vision & Objectifs
Migration NAV 2013 (objets 50xxx) vers Business Central 26 (objets 60xxx) en assurant: continuité opérationnelle, conformité, performance, standardisation code, suppression spécifiques obsolètes.

## 🚦 États & Phases (Synthèse)
- Phase actuelle: Consolidation post-migration Reports (commercial + statistique), préparation campagne tests structurée.
- Reports: 47 commerciaux migrés, 13 statistiques optimisés (SP-1712). Layouts normalisés.x

## 🧭 Gouvernance & Procédures (Condensé)
- Ce fichier conserve seulement vision, phases, règles critiques.
- Détails déplacés vers : `app/docs/Standards/`, `app/docs/Guides/`, `COP/README.md`.
- Branches dédiées pour évolutions majeures; références horodatées dans `Prompt.md`.
- Cohérence docs ↔ code obligatoire; pas de suppression sans analyse impact.
- Traçabilité prompts : 1 ID unique (voir `COP/README.md`).

### 🔁 Traçabilité COP (Rappel 3 points)
1. Result : complété à la clôture (livrables/impact).
2. Summary : enrichi en continu pendant échanges.
3. ID unique dans `Prompt.md`, summary, result.

## 🛠 Outils Clés (Référence rapide)
- Extension fromm-extension (Ctrl+Alt+F) normalisation.
- Reports : `app\src\Report\`
- Layouts RDLC : `app\src\Report\layout\` (chemin stable)

## 📐 Standards (Résumé)
| Domaine | Règle | Source |
|---------|-------|--------|
| Suffixes objets | Suffixe `FR0` obligatoire | Coding Standards |
| IDs | 60000‑69999 personnalisés | Conventions internes |
| Dates | JJ/MM/AA (+ HH:MM si critique) | Date_and_Report_Standards.md |
| Régions | Template FROMM (#region) | Analyzer_Rules.md |
| Labels | Français + Lbl | Analyzer_Rules.md |
| Performances | SP-1712 (clés / SetRange) | SP-1712_Methodology.md |

## 🧱 Mapping Objets 50xxx ➜ 60xxx (Rappel)
Toujours citer: `AncienID ➜ NouvelID - Type Nom`. Ex: `50069 ➜ 60069 - Report Commercial Invoice FROMMFR0`.
En cas de fusion: `50069,50021 ➜ 60090`. Objets supprimés: marquer `(supprimé)`.

### 📤 Table synchronisée depuis Plan de Test (v0.2.1)
Source: `app\docs\Plan de test\Plan_de_Test_Commercial.md` – section « Table de Correspondance Objets Personnalisés ».

<!-- MAPPING_TABLE_START -->
| Ancien_Nos | Nouveau_No | Type | Nom (BC26) | Domaine | Relié Cas Test | Statut Migration | Commentaire |
|------------|------------|------|------------|---------|----------------|------------------|-------------|
| 50069 | 60069 | Report | Commercial Invoice FROMM | Ventes/Reports | REP-CMP-INV | ✔ | Layout normalisé |
| 50021 | 60021 | Report | Proforma Invoice FROMM | Ventes/Reports | REP-CMP-INV | ✔ |  |
| 50060 | 60060 | Report | Évaluation Stock FROMM | Stock/Stats | STAT-STK-FROMM | ☐ | À revalider valeurs |
| 50017 | 60017 | Codeunit | Sales Posting Ext FROMM | Ventes | SLS-FLOW-01 | ✔ | Copie groupes TVA |
| 50022 | 60022 | Table | Historique notation client | Client | CUST-CL-HIST | ☐ | Plus utilisé (vérifier purge) |
| 50040 | 60040 | Table | Missing Information | Client | CUST-SYNC | ✔ | Contrôle champs obligatoires |
| 50041 | 60041 | Table | Fonction professionnelle | Fournisseur | VEND-PRT | ✔ | Groupe prêts dépendances |
| 50069,50021 | 60090 | Codeunit | Export Fromm Holding Dispatcher | Achats | PUR-EXP / PUR-CCA-CALC | ☐ | Exemple fusion (à confirmer) |
| 50000 | 60000 | Page | Feuille commentaire | Ventes | SLS-COMM-CMT | ✔ | Commentaires affichés |
| 50032 | 60032 | Page | Feuille commentaire Livraison | Ventes | SLS-COMM-CMT | ✔ | Livraison BL |
| (liste à compléter) |  |  |  |  |  |  |  |
<!-- MAPPING_TABLE_END -->

NOTE: Toute mise à jour de cette table doit être répercutée dans le plan de test puis « pull » ici (ajout entrée + statut). Utiliser mêmes colonnes.

## 🔒 Règles Critiques
| Interdiction | Action |
|--------------|--------|
| `&&` PowerShell | Séparer ou `;` |
| Modifier IDs sans validation | Demander validation métier |
| `this` en AL | Retirer (utiliser variable) |
| Supprimer procédure utilisée | Rechercher références avant |

## ✔️ Processus Qualité (Pipeline)
1. Normalisation (Ctrl+Alt+F) + analyzers.
2. Build + tests.
3. Mapping objets mis à jour.
4. Docs synchronisées (Prompt.md / COP / Standards).
5. Plan de test + journal anomalies.
6. KPI mise à jour.

## 👥 Interlocuteurs (Rôle Mémo)
Léa (Achats/Articles), Valèrie (Direction Admin), Nathalie (Compta), Marc (Export), Mélanie (ADV).

## 📑 Références Clés
| Sujet | Fichier |
|-------|---------|
| Plan de test | app/docs/"Plan de test"/Plan_de_Test_Commercial.md |
# CONTEXTE PROFESSIONNEL – STRUCTURATION MULTI-CLIENTS

## === IDENTITÉ ===
Nom : Christian Gilles  
Poste : Chef de Projet Technique  
Manager : Jean-Noël Patrouillault  
Skip Manager : Damien Dine  
Localisation : LYON, Prodware Rhône Alpes

## === EXPÉRIENCE ===
- Développeur en C/AL depuis 20 ans
- Environnement AL avec Visual Studio Code depuis 6 mois
- Utilisation intensive de GitHub Copilot depuis 2 mois

## === PROJETS EN COURS (Vue Transverse) ===
- Optimisation proactive de GitHub Copilot dans un projet Business Central AL
- Structuration documentaire multi-clients (FROMM, AUXIGA, ANTEMETA, HYGECO DE)
- Industrialisation des standards (extension FROMM + méthodologies réplicables)

## === VEILLE TECHNIQUE SOUHAITÉE ===
- Ciblée, globale et non intrusive
- Portant uniquement sur les évolutions techniques Business Central NAV / BC
- Partagée via canal dédié (Teams) entre Christian et Copilot
- Focus : impacts performance, analyzers, packaging, pipeline, AL runtime

---
## 📂 INDEX CLIENTS & MODULES
1. [FROMM France – Migration Globale NAV2013 ➜ BC26](#client-fromm-france--migration-globale)
2. [Extension FROMM – Outil VS Code (fromm-extension)](#client-fromm-extension--outil-vs-code)
3. [AUXIGA Classic – Maintenance C/AL BC14 ➜ Préparation BC26](#client-auxiga-classic)
4. [ANTEMETA – Module PDE (Production Data Exchange) BC26](#client-antemeta--pde-bc26)
5. [HYGECO DE – Structuration Extensions Multi-modules](#client-hygeco-de)
6. [Glossaire / Règles Transverses](#glossaire--transverse)

---
## CLIENT: FROMM FRANCE – MIGRATION GLOBALE
### 🎯 Vision & Objectifs
Migration NAV 2013 (objets 50xxx) ➜ BC 26 (objets 60xxx) : continuité opérationnelle, conformité, performance, standardisation, extinction spécifiques obsolètes.

### 🚦 Phase Actuelle
Consolidation post-migration Reports (47 commerciaux, 13 statistiques optimisés SP-1712) + préparation campagne de tests structurée.

### 🧭 Gouvernance (Condensé)
- Détails complets déportés (`app/docs/Standards/`, `COP/README.md`).
- Traçabilité prompts : ID unique synchronisé (Prompt.md / COP README / Summary / Result).
- Toute suppression nécessite analyse d’impact documentée.

### 🛠 Outils Clés
- Extension interne fromm-extension (Ctrl+Alt+F)
- Répertoires: `app\src\Report\`, layouts RDLC `app\src\Report\layout\`

### 📐 Standards Résumés
| Domaine | Règle | Source |
|---------|-------|--------|
| Suffixes objets | Suffixe FR0 obligatoire | Coding Standards |
| IDs | 60000–69999 personnalisés | Conventions internes |
| Dates | JJ/MM/AA (+ HH:MM si critique) | Date_and_Report_Standards.md |
| Régions | Template FROMM (#region) | Analyzer_Rules.md |
| Labels | Français + suffixe Lbl | Analyzer_Rules.md |
| Performances | SP-1712 (clés / SetRange) | SP-1712_Methodology.md |

### 🧱 Mapping Objets 50xxx ➜ 60xxx (Extrait)
Voir table synchronisée depuis Plan de test (`Plan_de_Test_Commercial.md`). Mise à jour obligatoire bilatérale.

### 🔒 Règles Critiques
| Interdiction | Action |
|--------------|--------|
| `&&` PowerShell | Séparer ou utiliser `;` |
| Modifier IDs sans validation | Demander validation métier |
| `this` en AL | Retirer (variable locale) |
| Supprimer procédure utilisée | Rechercher références |

### ✔️ Pipeline Qualité (Macro)
1. Normalisation (Ctrl+Alt+F) + analyzers  
2. Build + tests  
3. MAJ mapping objets  
4. Sync docs (Prompt.md / Standards)  
5. Plan de test / anomalies  
6. KPI MAJ

### 👥 Interlocuteurs
Léa (Achats), Valèrie (Direction Admin), Nathalie (Compta), Marc (Export), Mélanie (ADV)

### 📑 Références Clés
Plan de test, Standards code, Analyzers, Dates & Reports, Performance (SP-1712), Snippets, Traçabilité prompts, Historique prompts.

### 🧪 Snippets
Référencer `GUIDE_SNIPPETS_FROMM.md`.

### 🛑 Quotas Copilot
Surveiller barre VS Code – mode dégradé si quota épuisé.

---
## CLIENT: FROMM EXTENSION – OUTIL VS CODE
### 🧭 Objectif
Extension VS Code (TypeScript) pour normaliser automatiquement le code AL selon standards FROMM.

### ✅ État Fonctionnel (v1.1.2)
| Élément | Statut |
|---------|-------|
| Commande principale Ctrl+Alt+F | OK |
| Règles CodeCop intégrées (AA0005, AA0008, AA0074, AA0217) | 100% |
| Tests autonomes (AutoTestCodeCop.ts) | <15ms OK |
| Packaging VSIX | Prêt |
| Structure dossier /app/fromm-extension | Validée |

### 📦 Livrables Clés
`fromm-standards-1.1.2.vsix`, script `build-and-install.ps1`.

### 🔧 Contraintes
- Pas de nouvelle app.json / pas de CI/CD ajoutée sans validation.
- Readme auto-ouvert (masquable) – propriété intellectuelle Prodware.
_Manipulation prudente_: `app/fromm-extension/src/services/ALAnalyzer.ts`.

### 🚫 À Éviter
Scripts temporaires persistants, usage `&&` PowerShell, duplication logicielle, dépendances externes non validées.

### 🧪 Tests / Stratégie
- Tests non intrusifs, suppression automatique des artefacts de test.
- Import dynamique de nouvelles règles depuis .md (vision d’évolution).

### 📋 Historique Synthétique
Refonte architecture, stabilisation ordre corrections (régions → header → contenu → formatage), debug AA0470, protection FROMM001 renforcée.

### 🔍 Améliorations Futures (Placeholders)
- Import batch de règles via manifest Markdown.
- Génération rapport de conformité post-normalisation.

---
## CLIENT: AUXIGA CLASSIC
### 🏷️ Contexte
Maintenance d’objets C/AL (BC14) avec préparation progressive migration BC26.

### 🎯 Objectifs
Standardiser, documenter, limiter dette technique avant migration majeure.

### ⚙️ Contraintes
Objets C/AL exportés TXT, scripts PowerShell (build / clean / import), pas de dépendances externes non validées.

### 📁 Structure
`Codeunit/`, `Table/`, `Page/`, `Report/`, `Xmlport/`, `Menusuite/`, `Query/`, scripts & docs racine.

### 🔒 Règles
Pas de modification structure dossiers sans justification – prioriser lisibilité et migration future.

### 🧪 Tests
Tests non intrusifs, nettoyage artefacts, validation à chaque évolution majeure.

### 📌 Attentes Copilot
Réponses FR, code commenté, étapes claires, focus robustesse.

### Placeholders Évolutions
- Inventaire complet objets critiques performance.
- Matrice dépendances inter-modules pour migration.

---
## CLIENT: ANTEMETA – PDE BC26
### 🏷️ Synthèse Express
Installation, paramétrage et synchronisation PDE (Production Data Exchange) sur BC26 Prod – préparation Go Live (janvier) & validation duplications sociétés.

### 🎯 Objectifs Prioritaires
| Prio | Objectif | Délai | Indicateur |
|------|----------|-------|-----------|
| Haute | Installation fiable SRVAAPDE01 | Fait | SelfCheck OK |
| Haute | Sync BC ↔ PDE stable | Continu | 0 erreurs bloquantes /24h |
| Haute | Plan de bascule prêt | M-1 | Checklist validée |
| Moyenne | Doc paramétrage consolidée | En cours | Page Confluence à jour |
| Moyenne | Procédure duplication maîtrisée | Avant Go Live | Duplication + sync test OK |

### 🖥️ Infra / Références
Serveur: SRVAAPDE01.antemeta.net (192.168.78.66)  
Exécutable: `PDEGeneric.Console`  
Config: `appsettings.json` (BC, SQL, scheduling)

### 🔧 Commandes PDE
```powershell
PDEGeneric.Console --selfcheck
PDEGeneric.Console --init
PDEGeneric.Console --sync
# (À confirmer) --dryrun --status --repair
```

### ⚙️ Checklist appsettings.json
| Section | Points critiques | Statut |
|---------|------------------|--------|
| ConnectionStrings | BC, SQL (timeout, pooling) | ✔ |
| Scheduling | Cron / interval cohérent | ☐ |
| Logging | Niveau + rotation | ☐ |
| FeatureFlags | Modules actifs | ☐ |
| RetryPolicy | Backoff + max retries | ☐ |

### 🔄 Flux Synchronisation (Vue Haute)
Extraction ➜ Normalisation/mapping ➜ Upsert PDE ➜ Journalisation métriques ➜ Retry transitoires.

### 🧪 Tests
| Type | Statut | Suivant |
|------|--------|---------|
| SelfCheck | ✔ | Automatiser quotidien |
| Init | ✔ | Documenter diffs schéma |
| Sync référence | ✔ | Mettre métriques |
| Duplication société | ☐ | Script sandbox |
| Charge volumétrie | ☐ | Générer dataset |
| Reprise incident | ☐ | Test cohérence delta |

### 📊 Indicateurs (À Mettre en Place)
Latence moyenne (>10min alerte), erreurs bloquantes ( >0 ), erreurs transitoires réessayées (>5/h), temps init (>5min), croissance staging SQL (+20% baseline).

### 🧭 Plan Bascule (Draft)
Préparation config → Gel périmètre → Snapshot BC+PDE → Sync finale contrôlée → Validation fonctionnelle → Go → Surveillance 48h.

### 🚨 Risques & Mitigation
| Risque | Impact | Prob | Mitigation |
|--------|--------|------|-----------|
| Mapping erroné | Données incohérentes | M | Revue + sandbox |
| Latence | Décalage données | M | Monitoring + index |
| Duplication incorrecte | Propagation erreurs | L | Script validé |
| Retry mal réglé | Boucles/pertes | L | Revue seuils |
| Logs dispersés | Diagnostic lent | M | Centralisation |

### 📁 Journal Technique
| Date | Action | Résultat | Suivi |
|------|--------|----------|-------|
| 2025-08-25 | Installation PDE | OK | Ajouter doc installation |
| 2025-08-25 | SelfCheck | OK | Automatiser contrôle |

### 🔍 Points Ouverts
- Scheduling exact à formaliser  
- Stratégies logging / rotation  
- Métriques & stockage (dashboard cible)  
- Script duplication société  
- Périmètre validation manuelle post-sync

### 📘 Placeholders
Étapes techniques détaillées: `{text1}`  
Détails techniques complémentaires (mapping champs, index SQL): `{text2}`

### ✅ Règles de Mise à Jour
1. Toute modif `appsettings.json` horodatée ici  
2. Nouvelle commande PDE ➜ ajouter dans tableau commandes  
3. Sync majeure ➜ ligne journal  
4. Avant Go Live ➜ figer (tag Git) + checklist finale

### 🤖 Aide Copilot Spécifique
Terme « sync PDE » ➜ proposer commandes + vérification logs + métriques delta dernier run.

---
## CLIENT: HYGECO DE
### 🏷️ Synthèse Express
Structuration & industrialisation extensions BC multi-modules (FDD_x) + standardisation reports + packaging cohérent.

### 🎯 Objectifs
| Prio | Objectif | Indicateur |
|------|----------|-----------|
| Haute | Uniformiser publisher/application/runtime | Download Symbols OK |
| Haute | Cohérence multi-modules | Build multi-modules green |
| Haute | Standardiser reports & packaging | Pipeline validé |
| Moyenne | Audit ID ranges/dépendances | Rapport publié |
| Moyenne | Gouvernance documentaire | README synchronisé |

### 🖥️ Modules / Périmètre
FDD_01, 02, 03, 09, 12, 13, 16, 17, 20, 22, 23, 30, 31 | Reports: `1_FUN-Reports` | Packaging: `Hygeco_Production` | Libs: Prodware Config/Reports.

### 📐 Standards & Conventions
| Domaine | Règle | Statut |
|---------|-------|--------|
| Publisher | Unique: "Hygeco" | À uniformiser |
| Application | 18.0.0.0 partout | Divergent |
| Runtime | Cible unique (proposer 13.0) | Divergent |
| ID Ranges | Non chevauchants | À auditer |
| Features | NoImplicitWith + TranslationFile | À uniformiser |

### 🧱 Mapping Modules (Échantillon)
| Module | ID Range | Runtime | Publisher | Note |
|--------|---------|--------|----------|------|
| FDD_20 | 50100-50119 | 11.0 | Hygeco | Aligné platform 18 |
| FDD_31 | 50311-50320 | 13.0 | Prodware | Changer publisher + runtime |
| 1_FUN-Reports | 90150-90299 | 11.0 | Hygeco | Dépendances Prodware libs |
| Racine | 50100-50149 | 11.0 | Default Publisher | Incohérences majeures |
| Hygeco_Production | 50400-50410 | 11.0 | Prodware | Harmonisation requise |

### 🔒 Protections
Publisher unique, application=platform, runtime homogène, audit collisions ID périodique, désactiver `includeSourceInSymbolFile` en release.

### ✔️ Pipeline Étapes
Audit métadonnées → Correction lot app.json → Purge `.alpackages` → Download Symbols → Build global → Rapport qualité (RAPPORT_FINAL_PIPELINE_27062025.md).

### 🛑 Points Techniques à Surveiller
Publisher incohérent, application 2.0.0.0 ➜ 18.0.0.0, choix runtime, dépendances explicites Prodware.

### 📁 Journal Technique
| Date | Action | Résultat | Suivi |
|------|--------|----------|-------|
| 2025-08-26 | Diagnostic symboles | InternalServerError | Harmonisation en cours |

### 🔍 Points Ouverts
Lister tous app.json, script harmonisation, confirmer plateforme cible (SaaS / OnPrem container), matrice collisions ID.

### 📘 Placeholders
Étapes techniques détaillées: `{text1}`  
Détails techniques complémentaires: `{text2}`

### ✅ Règles Mise à Jour
1. Modif d’un app.json ➜ journal + diff résumé  
2. Nouvelle dépendance ➜ noter version exacte  
3. Build majeur ➜ statut + anomalies  
4. Pré-release ➜ figer section (tag)

### 🤖 Aide Copilot
Mot-clé « audit Hygeco » : proposer script extraction (publisher / runtime / application / ranges) + rapport collisions.

---
## GLOSSAIRE & TRANSVERSE
| Terme | Définition |
|-------|------------|
| SP-1712 | Méthodologie d’optimisation (clés, SetRange) appliquée reports |
| Mapping Objets | Table correspondance anciens nouveaux IDs + statut migration |
| RetryPolicy | Stratégie reprise erreurs transitoires (backoff exponentiel) |
| VSIX | Package installable extension VS Code |

### Règles Globales Documentation
1. Aucune affirmation sans base factuelle (code ou log).  
2. Placeholders `{text1}` / `{text2}` remplacés une fois validés – jamais laissés ambigus avant gel Go Live.  
3. Chaque section client indépendante (copiable isolément).  
4. Tag Git avant toute bascule critique (Go Live / Release majeure).  
5. Synchronisation continue entre ce fichier et fichiers contextes clients dédiés.

### Aide Copilot – Triggers Transverses
| Mot-clé | Réponse attendue |
|---------|------------------|
| sync PDE | Commandes + contrôle logs + métriques |
| audit Hygeco | Script harmonisation + tableau divergences |
| normaliser report | Application SP-1712 + structure régions |
| ajouter règle analyzer | Patrons extension FROMM + test unitaire |

---
Dernière structuration multi-clients : 26/08/2025  
Prochaine action recommandée : Renseigner placeholders techniques prioritaires `{text1}` (ANTEMETA & HYGECO) + lancer audit Hygeco (publisher/runtime).
| ID Ranges | Par module, non chevauchants | À vérifier |

